{"version":3,"sources":["form.js","office-workplace-background/58537.jpg","image.js","app.js","index.js"],"names":["FormApp","initialValues","fullName","email","country","password","confirmPass","position","phone","city","gender","initialTouched","validationSchema","Yup","shape","required","min","matches","oneOf","onSubmit","val","actions","console","log","values","errors","touched","handleChange","handleSubmit","handleBlur","isValid","className","htmlFor","id","type","name","placeholder","value","onChange","phoneNo","ImageComp","src","Photo","App","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cdb00f8.chunk.js","sourcesContent":["import React, { Component, isValidElement, useState } from 'react';\nimport { Formik } from 'formik';\nimport './App.css';\nimport * as Yup from 'yup';\n\nconst FormApp = () => {\n\n    return (\n        <>\n        <h1> Registration</h1>\n        <Formik initialValues={{\n                fullName : '',\n                email : '',\n                country : '',\n                password: '',\n                confirmPass: '',\n                position: '',\n                phone: '',\n                city: '',\n                gender: ''\n        }}\n\n        initialTouched={{ \n                fullName : true,\n                email : true,\n                country : true,\n                password: true,\n                confirmPass: true,\n                position: true,\n                phone: true,\n                city: true,\n                gender: true,\n              }}\n              \n        validationSchema={Yup.object().shape({\n                fullName : Yup\n                .string()\n                .required('Name cannot be blank')\n                .min(2, 'Name should be greater than 1 character') \n                .matches(/^[aA-zZ\\s]+$/,'No special character allowed'),\n                position : Yup.string().required('Select one position'),\n                email: Yup.string().email().required('Email is required'),\n                phone : Yup.number().required('Phone number is required'),\n                password: Yup.string().required('Password cannot be blank')\n                .min(8, 'Password is too short - should be 8 chars minimum.'),\n                confirmPass: Yup.string().required('Confirm your password')\n                .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n                gender: Yup.string().required('choose one'),\n\n        })}\n        onSubmit={(val,actions) => {console.log('submitted');\n        \n          }}\n        >\n        {({\n         values,\n         errors,\n         touched,\n         handleChange,\n         handleBlur,\n         handleSubmit,\n         isValid\n       }) => (\n           <>\n           <form onSubmit={handleSubmit}>\n            <div className=\"form-row\">\n                <div className=\"col\">\n                <label className=\"font-weight-bold\" htmlFor=\"nm\">Full Name</label>\n                        <input id=\"nm\" type=\"text\"  name=\"fullName\"\n                        className=\"form-control\"\n                        placeholder=\"Please enter your full name\" \n                        value={values.fullName}\n                        onChange={handleChange}\n                        />\n                        {errors.fullName && touched.fullName ? \n                        <div className=\"errorStyle\"> {errors.fullName} </div>: null}\n                </div>\n                \n                <div className=\"col\">\n                    <label className=\"font-weight-bold\">Position you are applying for</label>\n                    <select className=\"form-control\" name=\"position\" \n                    value={values.position} onChange={handleChange} \n                     >\n                    <option value=''>Choose...</option>\n                    <option value=\"entry\">Entry level Frontend Developer</option>\n                    <option value=\"associate\">Associate level Frontend Developer</option>\n                    <option value=\"senior\">Senior Frontend Developer</option>\n                    </select>\n                    {errors.position && touched.position ? \n                    <div className=\"errorStyle\"> {errors.position} </div>: null}\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"col \">\n                        <label className=\"font-weight-bold\">Email</label>\n                        <input type=\"email\"  name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"email@abc.com\" \n                        value={values.email}\n                        onChange={handleChange}/>\n                        {errors.email && touched.email ?\n                        <div className=\"errorStyle\"> {errors.email} </div>: null}\n                </div>\n                <div className=\"col \">\n                        <label className=\"font-weight-bold\">Phone number</label>\n                        <input type=\"tel\" name=\"phone\"\n                        className=\"form-control\"\n                        placeholder=\"Phone number\" \n                        value={values.phoneNo}\n                        onChange={handleChange}/>\n                        {errors.phone && touched.phone ?\n                        <div className=\"errorStyle\"> {errors.phone} </div>: null}\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"col \">\n                        <label className=\"font-weight-bold\">Country</label>\n                        <input type=\"email\" name=\"country\"\n                        className=\"form-control\"\n                        placeholder=\"India\" \n                        value={values.country}\n                        onChange={handleChange}/>\n                </div>\n                <div className=\"col \">\n                        <label className=\"font-weight-bold\">city</label>\n                        <input type=\"text\" name=\"city\"\n                        className=\"form-control\"\n                        placeholder=\"Kolkata\" \n                        value={values.city}\n                        onChange={handleChange}/>\n                </div>\n             </div>\n             <div className=\"form-row\">\n                <div className=\"col \">\n                        <label className=\"font-weight-bold\">Password</label>\n                        <input type=\"text\" name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"****\" \n                        value={values.password}\n                        onChange={handleChange}/>\n                        {errors.password && touched.password ?\n                        <div className=\"errorStyle\"> {errors.password} </div>: null}\n                </div>\n                <div className=\"col \">\n                        <label className=\"font-weight-bold\">Confirm Password</label>\n                        <input type=\"text\" name=\"confirmPass\"\n                        className=\"form-control\"\n                        placeholder=\"****\" \n                        value={values.confirmPass}\n                        onChange={handleChange}/>\n                </div>\n             </div>\n             <div className=\"form-row\"> \n                 <label className=\"font-weight-bold\"\n                 value={values.gender}  onChange={handleChange}>Gender</label>\n             </div>\n             <div>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                        <input type=\"radio\" name=\"radiobtn\" id=\"male\"\n                        className=\"form-check-input\" \n                        onChange={handleChange} />\n                        <label htmlFor=\"male\">Male</label> \n                </div>\n\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                        <input type=\"radio\" name=\"radiobtn\"id=\"fmale\"\n                        className=\"form-check-input \"\n                        onChange={handleChange}/>\n                        <label htmlFor=\"fmale\">Female</label>\n                </div>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                        <input type=\"radio\" name=\"radiobtn\" id=\"other\"\n                        className=\"form-check-input\"\n                        onChange={handleChange}/>\n                        <label htmlFor=\"other\">Other</label>\n                </div>\n\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                        <input type=\"radio\" name=\"radiobtn\" id=\"unknown\"\n                        className=\"form-check-input\"\n                        onChange={handleChange}/>\n                        <label htmlFor=\"unknown\">Prefer not to say</label>\n                </div>\n            </div>\n                <div>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                </div>\n            </form>\n           </>\n       )}\n        </Formik>\n        </>\n    )\n}\n\nexport default FormApp;\n\n","export default __webpack_public_path__ + \"static/media/58537.9641f381.jpg\";","import React from 'react';\nimport Photo from './office-workplace-background/58537.jpg';\n\nconst ImageComp = ()  => {\n    return(\n        <>\n        <img className=\"img-fluid\" src={Photo} />\n        </>\n    )\n}\n\nexport default ImageComp;\n","import React from 'react';\nimport './App.css';\nimport FormApp from './form';\nimport ImageComp from './image'\n\nclass App extends React.Component{\n    render(){\n        return (\n        <>\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col col-sm-0 col-md-4 col-lg-4\" >\n                <ImageComp />\n            </div>\n        <div className=\"col col-sm-12 col-md-8 col-lg-8\" >\n            <FormApp />\n        </div>\n        </div>\n\n</div>\n  \n        </>\n        )\n    } \n }\n\n export default App;\n        ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from  './app';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}